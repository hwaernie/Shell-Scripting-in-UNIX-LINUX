#!/bin/bash

echo
echo -e "\e[2m**press [Q/q] to quit programme**\e[0m"
echo 
echo
echo -e "\e[40;38;5;82m\t\tSTUDENT VALIDATION FORM\e[0m"
echo 
echo 


stuid=i
 until [ "$stuid" = "ok" ]
 do
  echo -en "\e[2m	Enter Student ID (00XXX0000)	:	\e[0m"; read studentid
  echo -en "\e[94m____________________________________________________________________________\e[0m"
  echo
 
 if  [[ $studentid =~ ^[Qq]$ ]]; then
   echo
   echo "RETURNING TO MAIN MENU..."
   echo
   sleep 2
   stuid=ok
   clear
   ./menuscript
   exit
 
 else
   check="$(grep "$studentid" "student.txt")"
   while IFS=: read -r programme id name others
   	do
   	  if [ "$studentid" = "$id" ]; then
   	   echo " "
   	   echo -e "Student Name\t\t: $name"
 	   echo
 	   echo -e "Enrolled Programme\t: $programme"
 	   echo
   	   studentname=$name
   	   stuid=ok
   	  else
   	   echo
 	   echo -e "\e[31mNO RECORD FOUND. PLEASE ENTER ANOTHER STUDENT ID. (00XXX00000) \e[0m"
 	   echo
   	  fi
   done <<< $check
   
 fi
 done

continue=i
until [ "$continue" = "ok" ]
do
 echo -en "\e[7mDo You Wish To Proceed with This Student? YES[Y] NO[N]\t\e[0m: "; read tosave
 
  case "$tosave" in
  [Yy])
	continue=ok
	;;
  [Nn])
 	echo
	echo "RETURNING TO STUDENT VALIDATION FORM...THIS MIGHT TAKE A SECOND"
 	echo
 	sleep 2
 	continue=ok
 	clear
 	./gradescript
 	exit
 	;;
  *)
 	echo -en "\n\e[31mINVALID OPTION.PLEASE TRY AGAIN. YES[Y] OR NO[N]\e[0m"
 	echo 
 	;;
  esac
done

	if [ -f "$studentid".txt ] && [ -s "$studentid".txt ]; then
	 echo " "
	 echo " "
	 echo " "
	 echo " "
	 echo " "
	 echo -en "\n\t\t\e[104mThis student already has an existing record, any changes in grading will replace the old existing data.\e[0m"
	 echo " "
	 echo " "
	 echo " "
	 echo " "
	 echo " "
		 		
	over=i
	until [ "$over" = "ok" ]
	do
	 echo
	 echo -en "\e[7mDo You Wish To Overwrite Existing Semester Grades? YES[Y] NO[N] \e[0m: "; read overwrite
	 
	 case "$overwrite" in
	 [Yy])
		rm "$studentid".txt
		over=ok
		;;
	 [Nn])
	 	echo 
		echo "RETURNING TO STUDENT VALIDATION FORM..."
		echo
		sleep 2
		over=ok
		clear
		./gradescript
		exit
		;;
	 *)
		echo " "
		echo -en "\n\e[31mINVALID OPTION.PLEASE TRY AGAIN.\e[0m"
 		echo " "
		;;
		
	 esac
	done
	fi
	
#STUDENT'S EXAMINATION MARKS FORM

echo
echo -e "\e[2m**press [Q/q] to exit form**\e[0m"
echo 
echo
echo -e "\e[40;38;5;82m\t\tSTUDENT'S EXAMINATION MARKS FORM\e[0m"
echo -en "\e[94m____________________________________________________________________________\e[0m"
echo 
echo 	
	
academic=i

until [ "$academic" = "ok" ]
do
 echo " "
 echo -en "\e[2mAcademic Year (YYYY)\t\t: "; read year
	
  if [[ $year =~ ^[0-9]{4}$ ]] || [[ $year =~ ^[Qq]$ ]]; then
  
   if [[ $year =~ ^[0-9]{4}$ ]]; then
  	YEAR=$year
  	academic=ok
   else
  	echo
  	echo "RETURNING TO STUDENT VALIDATION FORM..."
  	echo
  	sleep 2
  	academic=ok
  	clear
  	./gradescript
  	exit
   fi
  else
   echo
   echo -e "\e[31mINVALID ACADEMIC YEAR. PLEASE TRY AGAIN.\e[0m"
   echo
  fi
done


	sem=i
	
	until [ "$sem" = "ok" ]
	do
	 echo -en "Semester (1/2/3)\t\t: "; read semester
	 
	  if [[ $semester =~ ^[1-3]$ ]] || [[ $semester =~ ^[Qq]$ ]]; then
	  
	  	if [[ $semester =~ ^[1-3]$ ]]; then
	  	 SEMESTER=$semester
	  	 sem=ok
	  	else
	  	 echo
  		 echo "RETURNING TO STUDENT VALIDATION FORM..."
  		 echo
	  	 sleep 2
	  	 sem=ok
	  	 clear
	  	 ./gradescript
	  	 exit
	  	fi
	  else
	   echo
	   echo -e "\e[31mINVALID SEMESTER. PLEASE TRY AGAIN. (1/2/3)\e[0m"
	   echo 
	  fi
	done
	
	echo -e "Student ID\t: $studentid" >> $studentid.txt
	echo -e "Student Name\t: $studentname" >> $studentid.txt
	echo -e "Academic Year\t: $YEAR" >> $studentid.txt
	echo -e "Semester\t: $SEMESTER" >> $studentid.txt
	echo " " >> $studentid.txt
	echo "========================================================================================================================================" >> $studentid.txt
	echo -e "\tCourse Code\t\tMarks Obtained\t\t\tGrade Obtained\t\t\tRemark\t\t\tQuality Point\t" >> $studentid.txt
	echo "========================================================================================================================================" >> $studentid.txt
	
	total=0
	next=i
	until [ "$next" = "ok" ]
	do
	
	newcourse=i
	until [ "$newcourse" = "ok" ]
	do
	 course=i
	 until [ "$course" = "ok" ]
	 do
	  echo -en "\e[2mCourse Code (eg. BACS2093)\t: "; read coursecode
	  if [[ $coursecode =~ ^[Qq]$ ]]; then
		echo
		echo "RETURNING TO STUDENT VALIDATION FORM..."
		echo
		sleep 2
		course=ok
		clear
		./gradescript
		exit
	  else
	   check="$(grep "$coursecode" "course.txt")"
	   
	   while IFS=: read -r code name hour
	   	do
	   	  if [ "$coursecode" = "$code" ]; then
	   	   credithour=$hour
	   	   savedcourse=$code
	   	   course=ok
	   	   break
	   	  else
	   	   echo
   		   echo -e "\e[31mTHIS COURSE DOES NOT EXIST. PLEASE TRY AGAIN.\e[0m"
  		   echo
	   	  fi
	   	done <<< $check
	 fi
	 done
	
	search="$(grep "$savedcourse" "$studentid.txt")"
	 if [ "$savedcourse" = "$codename" ]; then
	  echo
	  echo -e "\e31mMarks Has Already Been Recorded For This Course. Please Try Another.\e[0m"
	  echo
	 else
	  codename=$savedcourse
	  newcourse=ok
	 fi
	
	done

	proceed=i
	until [ "$proceed" = "cont" ]
	do
	 echo -en "\e[2mMarks Obtained (0-100)\t\t: "; read marks
	 echo -e "\e[0m"
	 
	if ! [[ $marks =~ ^[1]?[0-9]?[0-9]$ ]]; then
	 echo
	 echo -e "\e[31mINVALID INPUT. PLEASE ENTER POSITIVE INTEGER ONLY. (0-100)\e[0m"
	 echo
	else
	 . ./marksscript
	fi
	done
	
	let qualitypoint=$GPA*$credithour
	let total=$qualitypoint+$total
	totalqp=$(echo "scale=4;$total/10000" |bc)
	point=$(echo "scale=4;$qualitypoint/10000" |bc)
	
	echo " " >> $id.txt
	echo -e "\t$codename\t\t\t$marks\t\t\t\t$grade\t\t\t$Remarks\t\t$point\t " >> $studentid.txt
	
	cont=i
	until [ "$cont" = "ok" ]
	do
	echo
	echo -en "\e[7mDo You Wish To Continue Adding Marks To This Student's File? YES[Y] NO[N] \e[0m: "; read wish
	
	case "$wish" in
	[Yy])
		cont=ok
		echo " "
		;;
	
	[Nn])
		echo " "
		cont=ok
		next=ok
		echo -e "\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t=========" >> $studentid.txt
		echo -e "\t\t\t\t\t\t\t\t\t\t\t\tTotal Quality Point: \t$totalqp" >> $studentid.txt
		echo " "
		echo " "
		echo -en "\e[0m\e[5m\t\t\tSaving The Results File...\e[0m"
		sleep 3
		echo -en "\r\e[0KRECORD SAVED.\n"
		sleep 1
		echo
		echo "RETURNING TO STUDENT VALIDATION FORM..."
		echo
		sleep 3
		clear
		./gradescript
		exit	
		;;
	
	*)
		echo " "
		echo -en "\n\e[31mINVALID OPTION.PLEASE TRY AGAIN.\e[0m"
 		echo " "
		;;
	esac
	done
	done

